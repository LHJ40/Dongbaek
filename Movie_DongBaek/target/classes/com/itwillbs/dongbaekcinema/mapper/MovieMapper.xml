<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.dongbaekcinema.mapper.MovieMapper">
<!--   <cache-ref namespace=""/> -->

	<!-- 0620정의효 영화 등록 -->
	<insert id="insertMovie">
		INSERT 
			INTO MOVIES
			VALUES (
				null
				, #{movie_name_kr}
				, #{movie_name_en}
				, #{movie_director}
				, #{movie_cast}
				, #{movie_genre}
				, #{movie_release_date}
				, #{movie_close_date}
				, #{movie_running_time}
				, #{movie_audience_num}
				, #{movie_content}
				, #{movie_grade}
				, #{movie_poster}
				, #{movie_preview}
				, #{movie_photo1}
				, #{movie_photo2}
				, #{movie_photo3}
				, null
			) 
	</insert>	
	
	<!-- 현재상영작 - 셀렉트박스:예매율순 
		 ++ 페이징처리로 LIMIT추가
	 --> 
	<select id="select_presentMovie_bookingRateDESC" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO"> 
 		SELECT * 
 		FROM 
 			MOVIES 
 		WHERE 
 			now() >= movie_release_date  
			AND movie_close_date >= now() 
		ORDER BY 
			movie_booking_rate DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 전체 글 목록 갯수 조회 (페이징처리)-->
	<select id="selectBoardListCount" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			MOVIES		
	</select>
	
	
	<!-- 메인. top4영화목록 조회 -->
	<select id="select_movieListTop4" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO">
		SELECT * 
 		FROM 
 			MOVIES 
 		WHERE 
 			now() >= movie_release_date  
			AND movie_close_date >= now() 
		ORDER BY 
			movie_booking_rate DESC 
		LIMIT 4
	</select>

	<!-- 상영예정작 조회 : 현재날짜 15일전 ~ 개봉일까지 ==> 기본 : 예매율순-->
	<select id="select_prepareMovie" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO">
		SELECT *
		FROM 
			MOVIES
		WHERE 
			now() >= movie_release_date
			AND movie_release_date > DATE_SUB(now(), INTERVAL 15 DAY)
		ORDER BY 
			movie_booking_rate DESC
	</select>
	
	<!-- 영화목록 - 현재상영작 평점순 정렬 변경시 조회되는 영화목록 -->
	<!--  
	MOVIE_REVIEWS  : 영화당 평점 뷰
	CREATE OR REPLACE VIEW MOVIE_REVIEWS AS(
	SELECT r.movie_num, AVG(review_rating) AS movie_review_rating
	FROM REVIEWS r JOIN MOVIES m
	ON r.movie_num = m.movie_num
	GROUP BY r.movie_num
	);	
	-->
	<select id="select_presentMovie_reviewRate" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO">
	SELECT DISTINCT *
<!-- 	SELECT DISTINCT m.*, r.* -->
	FROM 
		MOVIES m 
	JOIN 
		MOVIE_REVIEWS r
	ON m.movie_num = r.movie_num
	WHERE
		now() >= movie_release_date 
		AND movie_close_date >= now()
	ORDER BY
		movie_review_rating DESC
	</select>

	<!-- 현재상영작 - 셀렉트박스: 평점순 --> <!-- resultType -> newVO에 VO생성하고(뷰정보담을) 새로저장 -->
<!-- 	<select id="select_presentMovie_reviewRatingDESC" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO"> -->
<!-- 		SELECT * -->
<!-- 		FROM  -->
<!-- 			MOVIES m  -->
<!-- 		JOIN  -->
<!-- 			MOVIE_REVIEWS r -->
<!-- 		ON -->
<!-- 			m.movie_num = r.movie_num -->
<!-- 		WHERE -->
<!-- 			now() >= m.movie_release_date AND m.movie_close_date >= now() -->
<!-- 		ORDER BY  -->
<!-- 			r.movie_review_rating DESC; -->
<!-- 	</select>  -->


	<!-- REVIEW테이블, MOVIE테이블 조인 필요 -->
	<resultMap type="com.itwillbs.dongbaekcinema.vo.MovieVO" id="MovieVO">
		<result property="movie_num" column="movie_num"/>
		<result property="movie_name_kr" column="movie_name_kr"/>
		<result property="movie_name_en" column="movie_name_en"/>
		<result property="movie_director" column="movie_director"/>
		<result property="movie_cast" column="movie_cast"/>
		<result property="movie_genre" column="movie_genre"/>
		<result property="movie_release_date" column="movie_release_date"/>
		<result property="movie_close_date" column="movie_close_date"/>
		<result property="movie_running_time" column="movie_running_time"/>
		<result property="movie_audience_num" column="movie_audience_num"/>
		<result property="movie_content" column="movie_content"/>
		<result property="movie_poster" column="movie_poster"/>
		<result property="movie_preview" column="movie_preview"/>
		<result property="movie_photo1" column="movie_photo1"/>
		<result property="movie_photo2" column="movie_photo2"/>
		<result property="movie_photo3" column="movie_photo3"/>
		<result property="movie_booking_rate" column="movie_booking_rate"/>
	</resultMap>
	<resultMap type="com.itwillbs.dongbaekcinema.vo.ReviewVO" id="ReviewVO">
		<result property="review_num" column="review_num"/>
		<result property="movie_num" column="movie_num"/>
		<result property="member_id" column="member_id"/>
		<result property="review_rating" column="review_rating"/>
		<result property="review_content" column="review_content"/>
		<result property="review_date" column="review_date"/>
		<result property="movie_review_rating" column="movie_review_rating"/>
	</resultMap>	
	
<!-- 영화당 리뷰,평점평균 불러오기 -->
<!-- 영화당 리뷰개수(COUNT) 불러오기 -->

<select id="selectReview" resultType="com.itwillbs.dongbaekcinema.vo.ReviewVO">
	SELECT 
		review_num 
		, AVG(review_rating) as movie_review_rating
		, review_content
		, review_date
		, movie_num
		, member_id
	FROM 
		REVIEWS
	WHERE
		movie_num = #{movie_num}
	GROUP BY 
		review_num
		, review_content
		, review_date
		, movie_num
		, member_id
	ORDER BY
		review_num DESC
</select>


	
	
	
	
	
<!-- 전달받은 movie_num 파라미터값과 일치하는 리뷰카운팅정보 전달 -->
<select id="selectReviewCounting" resultType="com.itwillbs.dongbaekcinema.vo.ReviewVO">
	SELECT
		movie_num
		,COUNT(review_num) as 'review_count'
	FROM 
		REVIEWS
	WHERE 
		movie_num = #{movie_num}
	GROUP BY
		movie_num
</select>
	
<!-- 리뷰 목록 조회 - 최신순 -->
<select id="selectReviewList" resultType="com.itwillbs.dongbaekcinema.vo.ReviewVO">
	SELECT *
	FROM 
		REVIEWS
	WHERE 
		movie_num = #{movie_num}
	ORDER BY 
		review_date DESC
</select>
	
<!-- 페이징처리 --> 
<!-- <select id="getListWithPaging" resultType="org.zerock.domain.BoardVO"> -->
<!-- 		select * from tbl_board order by bno desc limit ${skip},${size} -->
<!-- 	</select>  -->
	
	
	
	
	
	<!-- 영화 목록 전부 조회 페이징처리로 필요없음 - 0616 정의효 -->
<!-- 	<select id="selectMovieList" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO"> -->
<!-- 		SELECT * -->
<!-- 		FROM MOVIES -->
<!-- 	</select> -->
	
	<!-- 페이징처리 - 0616정의효 -->
	<select id="getMovieList" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO">
		SELECT *
			FROM MOVIES
			ORDER BY movie_num DESC
			LIMIT #{start}, #{perPage}
	</select>
	
	<!-- 페이징처리 - 0616정의효 -->
	<select id="getCount" resultType="int">
		SELECT COUNT(*)
			FROM MOVIES
	</select>	
	

	<!-- 영화목록 상세 조회 -->
	<select id="selectMovie" resultType="com.itwillbs.dongbaekcinema.vo.MovieVO">
		SELECT *
		FROM MOVIES
		WHERE movie_num = #{movie_num}
	</select>
	
	<!-- 0620정의효 영화삭제 -->
	<delete id="movieDelete">
		DELETE
			FROM
				MOVIES
			WHERE
				movie_num = #{movie_num}
	</delete>
	
	<!-- 영화수정 0620정의효 -->
	<update id="movieModify" parameterType="com.itwillbs.dongbaekcinema.vo.MovieVO">
		UPDATE MOVIES 
			SET
			    movie_name_kr = #{movie_name_kr}
			    , movie_name_en = #{movie_name_en}
			    , movie_director = #{movie_director}
			    , movie_cast = #{movie_cast}
			    , movie_genre = #{movie_genre}
			    , movie_release_date = #{movie_release_date}
			    , movie_close_date = #{movie_close_date}
			    , movie_running_time = #{movie_running_time}
			    , movie_audience_num = #{movie_audience_num}
			    , movie_content = #{movie_content}
			    , movie_grade = #{movie_grade}
			    , movie_poster = #{movie_poster}
			    , movie_preview = #{movie_preview}
			    , movie_photo1 = #{movie_photo1}
			    , movie_photo2 = #{movie_photo2}
			    , movie_photo3 = #{movie_photo3}
			    , movie_booking_rate = #{movie_booking_rate}
			WHERE movie_num = #{movie_num}
	</update>
</mapper>
